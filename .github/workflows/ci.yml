name: CI

on:
  pull_request:

env:
  RUST_TOOLCHAIN: stable

jobs:
  static_analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install ${{ env.RUST_TOOLCHAIN }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          components: rustfmt, clippy

      - name: Cache ~/.cargo/bin directory
        uses: actions/cache@v1
        with:
          path: ~/.cargo/bin
          key: ubuntu-rust-${{ env.RUST_TOOLCHAIN }}-cargo-bin-directory-v1

      - name: Check code formatting
        run: cargo fmt -- --check

      - name: Run clippy
        run: cargo clippy --all-targets -- -D warnings

  build_test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install ${{ env.RUST_TOOLCHAIN }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true

      - name: Cache target directory
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ matrix.os }}-rust-${{ env.RUST_TOOLCHAIN }}-target-directory-${{ hashFiles('Cargo.lock') }}-v1

      - name: Cache ~/.cargo/registry directory
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.os }}-rust-${{ env.RUST_TOOLCHAIN }}-cargo-registry-directory-${{ hashFiles('Cargo.lock') }}-v1

      - name: Cargo check ${{ matrix.os }}
        run: cargo check

      - name: Cargo test
        run: cargo test

      - name: Build the binary for ${{ matrix.os }}
        run: cargo build --bin nectar

      - name: Upload cnd-${{ matrix.os }} archive that contains the binary
        uses: actions/upload-artifact@v1
        with:
          name: nectar-${{ matrix.os }}
          path: target/debug/nectar
