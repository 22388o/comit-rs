name: Create release archive
description: Creates a tar archive for a release binary
inputs:
  version:
    description: 'The version of the binary'
    required: true
  binary:
    description: 'The name of the binary to pack into the archive'
    required: true
  machine:
    description: 'The architecture of the binary to pack into the archive, defaults to the current system'
    required: false
outputs:
  archive:
    description: 'The name of the archive'
    value: ${{ steps.create-archive-name.outputs.archive }}
runs:
  using: "composite"
  steps:
    - id: create-archive-name
      shell: python # Use python to have a prettier name for the archive on Windows.
      run: |
        import platform
        os_info = platform.uname()

        machine = os_info.machine

        if ${{ inputs.machine }}:
          machine = ${{ inputs.machine }}

        archive_name=f'${{ inputs.binary }}_${{ inputs.version }}_{os_info.system}_{machine}'

        print(f'::set-output name=archive::{archive_name}')

    - name: Make archive
      shell: bash
      run: tar -C ./target/release --create --file=${{ steps.create-archive-name.outputs.archive }} ${{ inputs.binary }}
